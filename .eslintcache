[{"/home/donovan/Desktop/github/amazon-clone/src/index.js":"1","/home/donovan/Desktop/github/amazon-clone/src/App.js":"2","/home/donovan/Desktop/github/amazon-clone/src/reducer.js":"3","/home/donovan/Desktop/github/amazon-clone/src/StateProvider.js":"4","/home/donovan/Desktop/github/amazon-clone/src/Header.js":"5","/home/donovan/Desktop/github/amazon-clone/src/Home.js":"6","/home/donovan/Desktop/github/amazon-clone/src/Checkout.js":"7","/home/donovan/Desktop/github/amazon-clone/src/Login.js":"8","/home/donovan/Desktop/github/amazon-clone/src/firebase.js":"9","/home/donovan/Desktop/github/amazon-clone/src/Payment.js":"10","/home/donovan/Desktop/github/amazon-clone/src/Orders.js":"11","/home/donovan/Desktop/github/amazon-clone/src/Product.js":"12","/home/donovan/Desktop/github/amazon-clone/src/CheckoutProduct.js":"13","/home/donovan/Desktop/github/amazon-clone/src/Order.js":"14","/home/donovan/Desktop/github/amazon-clone/src/Subtotal.js":"15","/home/donovan/Desktop/github/amazon-clone/src/axios.js":"16"},{"size":408,"mtime":1610274809460,"results":"17","hashOfConfig":"18"},{"size":2186,"mtime":1609606972440,"results":"19","hashOfConfig":"18"},{"size":1022,"mtime":1609606972440,"results":"20","hashOfConfig":"18"},{"size":491,"mtime":1609606972440,"results":"21","hashOfConfig":"18"},{"size":1753,"mtime":1609606972440,"results":"22","hashOfConfig":"18"},{"size":2813,"mtime":1609606972440,"results":"23","hashOfConfig":"18"},{"size":2068,"mtime":1609606972440,"results":"24","hashOfConfig":"18"},{"size":2153,"mtime":1609606972440,"results":"25","hashOfConfig":"18"},{"size":514,"mtime":1610273410840,"results":"26","hashOfConfig":"18"},{"size":4922,"mtime":1609606972440,"results":"27","hashOfConfig":"18"},{"size":1076,"mtime":1609606972440,"results":"28","hashOfConfig":"18"},{"size":1469,"mtime":1609606972440,"results":"29","hashOfConfig":"18"},{"size":1063,"mtime":1609606972440,"results":"30","hashOfConfig":"18"},{"size":1090,"mtime":1609606972440,"results":"31","hashOfConfig":"18"},{"size":1042,"mtime":1609606972440,"results":"32","hashOfConfig":"18"},{"size":230,"mtime":1610274359960,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"1hlxqp1",{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"36"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"36"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"/home/donovan/Desktop/github/amazon-clone/src/index.js",[],["79","80"],"/home/donovan/Desktop/github/amazon-clone/src/App.js",["81","82","83"],"import \"./App.css\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport { useEffect } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport Checkout from \"./Checkout\";\nimport Login from \"./Login\";\nimport { auth } from \"./firebase\";\nimport { useStateValue } from \"./StateProvider\";\nimport Payment from \"./Payment\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport Orders from \"./Orders\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nconst promise = loadStripe(\n  \"pk_test_51I2KRqFfwhAfciU4o1WVxeq5ZJjSQT81tZdAwxvIbYbpqTSql3oLz9igbQW9GaMLOOEMuTqKYkKyxKHFVM52qH0Q00zCdyEtur\"\n);\n\nfunction App() {\n  const [{ basket, user }, dispatch] = useStateValue();\n\n  useEffect(() => {\n    auth.onAuthStateChanged((authUser) => {\n      console.log(authUser);\n\n      if (authUser) {\n        dispatch({\n          type: \"SET_USER\",\n          user: authUser,\n        });\n      } else {\n        dispatch({\n          type: \"SET_USER\",\n          user: null,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n      />\n      <Router>\n        <div className=\"app\">\n          <Header />\n          <Switch>\n            <Route path=\"/login\">\n              <Login />\n            </Route>\n            <Route path=\"/checkout\">\n              <Checkout />\n            </Route>\n\n            <Route path=\"/payment\">\n              {user ? (\n                <Elements stripe={promise}>\n                  <Payment />\n                </Elements>\n              ) : (\n                <Redirect to=\"/login\" />\n              )}\n            </Route>\n            <Route path=\"/orders\">\n              <Orders />\n            </Route>\n            <Route path=\"/\">\n              <Home />\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/home/donovan/Desktop/github/amazon-clone/src/reducer.js",[],"/home/donovan/Desktop/github/amazon-clone/src/StateProvider.js",[],"/home/donovan/Desktop/github/amazon-clone/src/Header.js",["84","85"],"import React from \"react\";\nimport \"./Header.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\nimport { Link } from \"react-router-dom\";\nimport { useStateValue } from \"./StateProvider\";\nimport { auth } from \"./firebase\";\n\nfunction Header() {\n  const [{ basket, user }, dispatch] = useStateValue();\n\n  const handleAuthentication = () => {\n    if (user) {\n      auth.signOut();\n    }\n  };\n\n  return (\n    <div className=\"header\">\n      <Link to=\"/\">\n        <img\n          className=\"header__logo\"\n          src=\"http://pngimg.com/uploads/amazon/amazon_PNG11.png\"\n        />\n      </Link>\n      <div className=\"header__search\">\n        <input type=\"text\" className=\"header__searchInput\" />\n        <SearchIcon className=\"header__searchIcon\" />\n      </div>\n      <div className=\"header__nav\">\n        <Link to={!user && \"/login\"}>\n          <div onClick={handleAuthentication} className=\"header__option\">\n            <span className=\"header__optionLineOne\">Hello</span>\n            <span className=\"header__optionLineTwo\">\n              {user ? \"Sign Out\" : \"Sign In\"}\n            </span>\n          </div>\n        </Link>\n        <Link to=\"/orders\">\n          <div className=\"header__option\">\n            <span className=\"header__optionLineOne\">Your</span>\n            <span className=\"header__optionLineTwo\">Orders</span>\n          </div>\n        </Link>\n        <Link to=\"/checkout\">\n          <div className=\"header__optionBasket\">\n            <ShoppingBasketIcon />\n            <span className=\"header__optionLineTwo header__basketCount\">\n              {basket.length}\n            </span>\n          </div>\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","/home/donovan/Desktop/github/amazon-clone/src/Home.js",[],"/home/donovan/Desktop/github/amazon-clone/src/Checkout.js",["86","87"],"import React from \"react\";\nimport \"./Checkout.css\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport { useStateValue } from \"./StateProvider\";\nimport Subtotal from \"./Subtotal\";\nimport { useTransition, animated } from \"react-spring\";\n\nfunction Checkout() {\n  const [{ basket }, dispatch] = useStateValue();\n\n  const windowWidth = window.innerWidth;\n\n  const transition = useTransition(basket, (product) => product.id, {\n    from: {\n      height: 0,\n      opacity: 0,\n      marginLeft: -100,\n      marginRight: 100,\n    },\n    enter: {\n      height: windowWidth > 700 ? 200 : 230,\n      opacity: 1,\n      marginLeft: 0,\n      marginRight: 0,\n    },\n    leave: {\n      margin: 0,\n      padding: 0,\n      height: 0,\n      overflow: \"hidden\",\n      opacity: 0,\n    },\n  });\n\n  return (\n    <div className=\"checkout\">\n      <div className=\"checkout__left\">\n        <img\n          className=\"checkout__ad\"\n          src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB4234926668_.jpg\"\n        />\n\n        <div>\n          <h2 className=\"checkout__title\">Your Shopping Basket</h2>\n          {console.log(\"transition\", transition)}\n          {transition.map(({ item, key, props }) => {\n            return (\n              <animated.div key={key} style={props} className=\"checkoutProduct\">\n                <CheckoutProduct\n                  id={item.id}\n                  title={item.title}\n                  image={item.image}\n                  price={item.price}\n                  rating={item.rating}\n                />\n              </animated.div>\n            );\n          })}\n\n          {/* {basket.map((item) => {\n            return (\n              <CheckoutProduct\n                id={item.id}\n                title={item.title}\n                image={item.image}\n                price={item.price}\n                rating={item.rating}\n              />\n            );\n          })} */}\n        </div>\n      </div>\n\n      <div className=\"checkout__right\">\n        <Subtotal />\n      </div>\n    </div>\n  );\n}\n\nexport default Checkout;\n","/home/donovan/Desktop/github/amazon-clone/src/Login.js",["88"],"import React, { useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { auth } from \"./firebase\";\nimport \"./Login.css\";\n\nfunction Login() {\n  const history = useHistory();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const signIn = (e) => {\n    e.preventDefault();\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .then((auth) => {\n        console.log(auth);\n        history.push(\"/\");\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  const register = (e) => {\n    e.preventDefault();\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((auth) => {\n        console.log(auth);\n\n        // it successfully created a new user with email and password\n        if (auth) {\n          history.push(\"/\");\n        }\n      })\n      .catch((error) => alert(error.message));\n  };\n\n  return (\n    <div className=\"login\">\n      <Link to=\"/\">\n        <img\n          className=\"login__logo\"\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a9/Amazon_logo.svg/1024px-Amazon_logo.svg.png\"\n        />\n      </Link>\n\n      <div className=\"login__container\">\n        <h1>Sign-in</h1>\n\n        <form>\n          <h5>E-mail</h5>\n          <input\n            type=\"text\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n\n          <h5>Password</h5>\n          <input\n            type=\"password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n\n          <button\n            type=\"submit\"\n            className=\"login__signInButton\"\n            onClick={signIn}\n          >\n            Sign In\n          </button>\n        </form>\n\n        <p>\n          By signing-in you agree to the AMAZON FAKE CLONE Conditions of Use &\n          Sale. Please see our Privacy Notice, our Cookies Notice and our\n          Interest-Based Ads Notice.\n        </p>\n\n        <button className=\"login__registerButton\" onClick={register}>\n          Create your Amazon Account\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Login;\n","/home/donovan/Desktop/github/amazon-clone/src/firebase.js",["89"],"import firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBAVJqTe3Tcr1G6U0NxFsinzHPQPkaNkM4\",\n  authDomain: \"amaclone-4e671.firebaseapp.com\",\n  projectId: \"amaclone-4e671\",\n  storageBucket: \"amaclone-4e671.appspot.com\",\n  messagingSenderId: \"1033482924127\",\n  appId: \"1:1033482924127:web:1ffb2aecc4e875afe9abea\",\n  measurementId: \"G-DEJH4BPY3Q\",\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };\n","/home/donovan/Desktop/github/amazon-clone/src/Payment.js",["90"],"import { Link, useHistory } from \"react-router-dom\";\nimport { CardElement, useElements, useStripe } from \"@stripe/react-stripe-js\";\nimport React, { useState, useEffect } from \"react\";\nimport CurrencyFormat from \"react-currency-format\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport \"./Payment.css\";\nimport { getBasketTotal } from \"./reducer\";\nimport { useStateValue } from \"./StateProvider\";\nimport axios from \"./axios\";\nimport { db } from \"./firebase\";\n\n// import { }\n\nfunction Payment() {\n  const [{ basket, user }, dispatch] = useStateValue();\n\n  const history = useHistory();\n\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [disabled, setDisabled] = useState(true);\n  const [clientSecret, setClientSecret] = useState(true);\n\n  useEffect(() => {\n    // generate the special stripe secret which allows us to charge a customer\n    const getClientSecret = async () => {\n      const response = await axios({\n        method: \"post\",\n        // Stripe expects the total in a currencies subunits\n        url: `/payments/create?total=${getBasketTotal(basket) * 100}`,\n      });\n      setClientSecret(response.data.clientSecret);\n    };\n\n    getClientSecret();\n  }, [basket]);\n\n  console.log(\"THE SECRET IS >>>\", clientSecret);\n  console.log(\"👱\", user);\n\n  const handleSubmit = async (event) => {\n    // do all the fancy stripe stuff...\n    event.preventDefault();\n    setProcessing(true);\n\n    const payload = await stripe\n      .confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: elements.getElement(CardElement),\n        },\n      })\n      .then(({ paymentIntent }) => {\n        // paymentIntent = payment confirmation\n\n        db.collection(\"users\")\n          .doc(user?.uid)\n          .collection(\"orders\")\n          .doc(paymentIntent.id)\n          .set({\n            basket: basket,\n            amount: paymentIntent.amount,\n            created: paymentIntent.created,\n          });\n\n        setSucceeded(true);\n        setError(null);\n        setProcessing(false);\n\n        dispatch({\n          type: \"EMPTY_BASKET\",\n        });\n\n        history.replace(\"/orders\");\n      });\n  };\n\n  const handleChange = (event) => {\n    // Listen for changes in the CardElement\n    // and display any errors as the customer types their card details\n    setDisabled(event.empty);\n    setError(event.error ? event.error.message : \"\");\n  };\n\n  return (\n    <div className=\"payment\">\n      <div className=\"payment__container\">\n        <h1>\n          Checkout (<Link to=\"/checkout\">{basket?.length} items</Link>)\n        </h1>\n\n        {/* Payment section - delivery address */}\n        <div className=\"payment__section\">\n          <div className=\"payment__title\">\n            <h3>Delivery Address</h3>\n          </div>\n          <div className=\"payment__address\">\n            <p>{user?.email}</p>\n            <p>123 React Lane</p>\n            <p>Los Angeles, CA</p>\n          </div>\n        </div>\n\n        {/* Payment section - Review Items */}\n        <div className=\"payment__section\">\n          <div className=\"payment__title\">\n            <h3>Review items and delivery</h3>\n          </div>\n          <div className=\"payment__items\">\n            {basket.map((item) => (\n              <CheckoutProduct\n                id={item.id}\n                title={item.title}\n                image={item.image}\n                price={item.price}\n                rating={item.rating}\n                hideButton\n              />\n            ))}\n          </div>\n        </div>\n\n        {/* Payment section - Payment method */}\n        <div className=\"payment__section\">\n          <div className=\"payment__title\">\n            <h3>Payment Method</h3>\n          </div>\n          <div className=\"payment__details\">\n            {/* Stripe magic will go */}\n\n            <form onSubmit={handleSubmit}>\n              <CardElement onChange={handleChange} />\n              <p className=\"fake__card__number\">\n                ex: 42424242..4242...4242.4242 to fake payment\n              </p>\n              <div className=\"payment__priceContainer\">\n                <CurrencyFormat\n                  renderText={(value) => <h3>Order Total: {value}</h3>}\n                  decimalScale={2}\n                  value={getBasketTotal(basket)}\n                  displayType={\"text\"}\n                  thousandSeparator={true}\n                  prefix={\"$\"}\n                />\n                <button disabled={processing || disabled || succeeded}>\n                  <span>{processing ? <p>Processing</p> : \"Buy Now\"}</span>\n                </button>\n              </div>\n\n              {/* Errors */}\n              {error && <div>{error}</div>}\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Payment;\n","/home/donovan/Desktop/github/amazon-clone/src/Orders.js",["91","92"],"import React, { useState, useEffect } from \"react\";\nimport { db } from \"./firebase\";\nimport \"./Orders.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport Order from \"./Order\";\n\nfunction Orders() {\n  const [{ basket, user }, dispatch] = useStateValue();\n  const [orders, setOrders] = useState([]);\n\n  useEffect(() => {\n    if (user) {\n      db.collection(\"users\")\n        .doc(user?.uid)\n        .collection(\"orders\")\n        .orderBy(\"created\", \"desc\")\n        .onSnapshot((snapshot) =>\n          setOrders(\n            snapshot.docs.map((doc) => ({\n              id: doc.id,\n              data: doc.data(),\n            }))\n          )\n        );\n    } else {\n      setOrders([]);\n    }\n  }, [user]);\n\n  if (user) {\n    return (\n      <div className=\"orders\">\n        <h1>Your Orders</h1>\n\n        <div className=\"orders__order\">\n          {orders?.map((order) => (\n            <Order order={order} />\n          ))}\n        </div>\n      </div>\n    );\n  } else {\n    return <div className=\"login__first\">You are not logged in yet</div>;\n  }\n}\n\nexport default Orders;\n","/home/donovan/Desktop/github/amazon-clone/src/Product.js",["93"],"import React from \"react\";\nimport \"./Product.css\";\nimport { useStateValue } from \"./StateProvider\";\nimport { toast } from \"react-toastify\";\n\nfunction Product({ id, title, price, image, rating }) {\n  const [{ basket }, dispatch] = useStateValue();\n\n  const addToBasket = () => {\n    console.log(\"add to basket was called\");\n\n    // dispatch item to datalayer\n    dispatch({\n      type: \"ADD_TO_BASKET\",\n      item: {\n        id: id,\n        title: title,\n        image: image,\n        price: price,\n        rating: rating,\n      },\n    });\n  };\n\n  const notify = () => {\n    console.log(\"notified was called\");\n    toast(`Item successfully added`, {\n      position: \"top-right\",\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n\n  return (\n    <div className=\"product\">\n      <div className=\"product__info\">\n        <p>{title}</p>\n        <p className=\"product__price\">\n          <small>$</small>\n          <strong>{price}</strong>\n        </p>\n        <div className=\"product__rating\">\n          {Array(rating)\n            .fill()\n            .map(() => {\n              return <p>⭐</p>;\n            })}\n        </div>\n      </div>\n      <img src={image} alt=\"\" />\n      <button\n        onClick={() => {\n          addToBasket();\n          notify();\n        }}\n      >\n        Add to Basket\n      </button>\n    </div>\n  );\n}\n\nexport default Product;\n","/home/donovan/Desktop/github/amazon-clone/src/CheckoutProduct.js",["94","95"],"import React from \"react\";\nimport \"./CheckoutProduct.css\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction CheckoutProduct({ id, title, image, price, rating, hideButton }) {\n  const [{ basket }, dispatch] = useStateValue();\n\n  const removeFromBasket = () => {\n    dispatch({\n      type: \"REMOVE_FROM_BASKET\",\n      id: id,\n    });\n  };\n\n  return (\n    // <div className=\"checkoutProduct\">\n    <>\n      <img className=\"checkoutProduct__image\" src={image} />\n      <div className=\"checkoutProduct__info\">\n        <p className=\"checkoutProduct__title\">{title}</p>\n        <p className=\"checkoutProduct__price\">\n          <small>$</small>\n          <strong>{price}</strong>\n        </p>\n        <div className=\"checkoutProduct__rating\">\n          {Array(rating)\n            .fill()\n            .map(() => {\n              return <p>⭐</p>;\n            })}\n        </div>\n        {!hideButton && (\n          <button onClick={removeFromBasket}>Remove from Basket</button>\n        )}\n      </div>\n    </>\n    // </div>\n  );\n}\n\nexport default CheckoutProduct;\n","/home/donovan/Desktop/github/amazon-clone/src/Order.js",["96"],"import React from \"react\";\nimport \"./Order.css\";\nimport moment from \"moment\";\nimport CheckoutProduct from \"./CheckoutProduct\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { useStateValue } from \"./StateProvider\";\n\nfunction Order({ order }) {\n  return (\n    <div className=\"order\">\n      <h2>Order</h2>\n      <p className=\"order__date\">\n        {moment.unix(order.data.created).format(\"MMMM Do YYYY, h:mma\")}\n      </p>\n      <p className=\"order__id\">\n        <small>{order.id}</small>\n      </p>\n      {order.data.basket?.map((item) => (\n        <CheckoutProduct\n          id={item.id}\n          title={item.title}\n          image={item.image}\n          price={item.price}\n          rating={item.rating}\n          hideButton\n        />\n      ))}\n      <CurrencyFormat\n        renderText={(value) => (\n          <h3 className=\"order__total\">Order Total: {value}</h3>\n        )}\n        decimalScale={2}\n        value={order.data.amount / 100}\n        displayType={\"text\"}\n        thousandSeparator={true}\n        prefix={\"$\"}\n      />\n    </div>\n  );\n}\n\nexport default Order;\n","/home/donovan/Desktop/github/amazon-clone/src/Subtotal.js",["97"],"import React from \"react\";\nimport \"./Subtotal.css\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { useStateValue } from \"./StateProvider\";\nimport { getBasketTotal } from \"./reducer\";\nimport { useHistory } from \"react-router-dom\";\n\nfunction Subtotal() {\n  const history = useHistory();\n  const [{ basket }, dispatch] = useStateValue();\n\n  return (\n    <div className=\"subtotal\">\n      <CurrencyFormat\n        renderText={(value) => (\n          <>\n            <p>\n              Subtotal ( {basket.length} items )<strong> {value}</strong>\n            </p>\n            <small className=\"subtotal__gift\">\n              <input type=\"checkbox\" />\n              This order contains a gift\n            </small>\n          </>\n        )}\n        decimalScale={2}\n        value={getBasketTotal(basket)}\n        displayType={\"text\"}\n        thousandSeparator={true}\n        prefix={\"$\"}\n      />\n\n      <button onClick={() => history.push(\"/payment\")}>\n        Proceed to Checkout\n      </button>\n    </div>\n  );\n}\n\nexport default Subtotal;\n","/home/donovan/Desktop/github/amazon-clone/src/axios.js",[],["98","99"],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":19,"column":26,"nodeType":"106","messageId":"107","endLine":19,"endColumn":31},{"ruleId":"104","severity":1,"message":"108","line":27,"column":12,"nodeType":"106","messageId":"107","endLine":27,"endColumn":18},{"ruleId":"109","severity":1,"message":"110","line":45,"column":6,"nodeType":"111","endLine":45,"endColumn":8,"suggestions":"112"},{"ruleId":"104","severity":1,"message":"113","line":10,"column":28,"nodeType":"106","messageId":"107","endLine":10,"endColumn":36},{"ruleId":"114","severity":1,"message":"115","line":21,"column":9,"nodeType":"116","endLine":24,"endColumn":11},{"ruleId":"104","severity":1,"message":"113","line":9,"column":22,"nodeType":"106","messageId":"107","endLine":9,"endColumn":30},{"ruleId":"114","severity":1,"message":"115","line":38,"column":9,"nodeType":"116","endLine":41,"endColumn":11},{"ruleId":"114","severity":1,"message":"115","line":42,"column":9,"nodeType":"116","endLine":45,"endColumn":11},{"ruleId":"104","severity":1,"message":"117","line":13,"column":7,"nodeType":"106","messageId":"107","endLine":13,"endColumn":18},{"ruleId":"104","severity":1,"message":"118","line":50,"column":11,"nodeType":"106","messageId":"107","endLine":50,"endColumn":18},{"ruleId":"104","severity":1,"message":"108","line":8,"column":12,"nodeType":"106","messageId":"107","endLine":8,"endColumn":18},{"ruleId":"104","severity":1,"message":"113","line":8,"column":28,"nodeType":"106","messageId":"107","endLine":8,"endColumn":36},{"ruleId":"104","severity":1,"message":"108","line":7,"column":12,"nodeType":"106","messageId":"107","endLine":7,"endColumn":18},{"ruleId":"104","severity":1,"message":"108","line":6,"column":12,"nodeType":"106","messageId":"107","endLine":6,"endColumn":18},{"ruleId":"114","severity":1,"message":"115","line":18,"column":7,"nodeType":"116","endLine":18,"endColumn":61},{"ruleId":"104","severity":1,"message":"119","line":6,"column":10,"nodeType":"106","messageId":"107","endLine":6,"endColumn":23},{"ruleId":"104","severity":1,"message":"113","line":10,"column":22,"nodeType":"106","messageId":"107","endLine":10,"endColumn":30},{"ruleId":"100","replacedBy":"120"},{"ruleId":"102","replacedBy":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'toast' is defined but never used.","Identifier","unusedVar","'basket' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["124"],"'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'firebaseApp' is assigned a value but never used.","'payload' is assigned a value but never used.","'useStateValue' is defined but never used.",["122"],["123"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},"Update the dependencies array to be: [dispatch]",{"range":"127","text":"128"},[1160,1162],"[dispatch]"]